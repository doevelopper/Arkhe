<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0           
		 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!--                               INFORMATIONS                              -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<groupId>io.github.levitics</groupId>
	<artifactId>levitics.arkhe</artifactId>
	<version>1.0-SNAPSHOOT</version>
	<packaging>pom</packaging>

	<name>Levitics Arkhe</name>

	<description> UAV Mission planning and operations.	</description>
	<url>http://www.levitics.com/arkhe</url>
	<inceptionYear>2017</inceptionYear>
	<organization>
		<name>The Levitics Software Engineering Lab</name>
		<url>http://www.levitics.com/</url>
	</organization>
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!--                                 LICENSE                                 -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<licenses>
		<license>
			<name>THE APACHE SOFTWARE LICENSE, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>Open Source Licenses.</comments>
		</license>
		<license>
			<name>GNU GENERAL PUBLIC LICENSE Version 3</name>
			<url>${licenses-header-path}/licenses/GPL-3.0.txt</url>
			<distribution>repo</distribution>
			<comments>Open Source Licenses.</comments>
		</license>
		<license>
			<name>GNU LESSER GENERAL PUBLIC LICENSE Version 3</name>
			<url>${licenses-header-path}/licenses/LGPL-3.0.txt</url>
			<distribution>repo</distribution>
			<comments>Open Source Licenses.</comments>
		</license>        
		<license>
			<name>WTFPL - Do What The Fuck You Want To Public License</name>
			<url>http://www.wtfpl.net/</url>
			<distribution>repo</distribution>
			<comments>Open Source Licenses.</comments>
		</license>
	</licenses>        
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!--                                DEVELOPERS                               -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<developers>
		<developer>
			<id>101</id>
			<name>Adrien H</name>
			<email>happyman@${mailUrl}</email>
			<url/>
			<organization>${project.organization.name}</organization>
			<organizationUrl>${project.organization.url}</organizationUrl>
			<roles>
				<role>PMC</role>
				<role>architect</role>
				<role>developer</role>
				<role>tester</role>
			</roles>
			<timezone>+1</timezone>
			<properties>
				<picUrl>http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?f=y</picUrl>
			</properties>
		</developer>
	</developers>
	<!--
                                    *** PROJECT Contributors ***
    -->

	<contributors>
		<contributor>
			<name>Jane  Doe</name>
			<email>jane.doe@acme.com</email>
			<url/>
			<organization>${project.organization.name}</organization>
			<organizationUrl>${project.organization.url}</organizationUrl>
			<roles>
				<role>developer</role>
				<role>tester</role>
			</roles>
			<timezone>+1</timezone>
			<properties>
				<picUrl>http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?f=y</picUrl>
			</properties>
		</contributor>
	</contributors>
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!--                                PROPERTIES                               -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<properties>
		<namespace>ARKHE</namespace>
		<styleFolderSrc>${project.build.sourceDirectory}</styleFolderSrc>
		<styleFolderTest>${project.build.testSourceDirectory}</styleFolderTest>
		<!--rsrcFolder>${project.build.resources[0].directory}</rsrcFolder>  https://blog.rabahi.net/?page_id=1391 -->
		<rsrcFolder/>
		<main.basedir>${project.basedir}</main.basedir>  <!-- ovverriden in sub module -->
		<roodDir>${project.basedir}</roodDir>
		<install.basedir>${project.build.directory}</install.basedir>

		<global.encoding>UTF-8</global.encoding>
		<project.build.sourceEncoding>${global.encoding}</project.build.sourceEncoding>
		<project.build.outputEncoding>${global.encoding}</project.build.outputEncoding>
		<project.reporting.outputEncoding>${global.encoding}</project.reporting.outputEncoding> 
		<sourceReleaseAssemblyDescriptor>source-release</sourceReleaseAssemblyDescriptor>

		<exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-site-plugin.version>3.6</maven-site-plugin.version>
		<maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<puppycrawl.tools.version>5.4</puppycrawl.tools.version>
		<groovy-maven-plugin.version>2.0</groovy-maven-plugin.version>
		<groovy-al.version>2.4.8</groovy-al.version>

		<sonar.language>c++</sonar.language>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.cxx.cppcheck.reportPath>.sonar/reports-cppcheck/cppcheck-result-*.xml</sonar.cxx.cppcheck.reportPath>		
		<sonar.cxx.customrules.reportPath>.sonar/reports-cpplint/cpplint-result-*.xml</sonar.cxx.customrules.reportPath>
		<sonar.cxx.rats.reportPath>.sonar/reports-rats/rats-result-*.xml</sonar.cxx.rats.reportPath>
		<sonar.cxx.vera.reportPath>.sonar/reports-vera++/vera++-result-*.xml</sonar.cxx.vera.reportPath>
		<sonar.cxx.xunit.reportPath>.sonar/reports-xunit/xunit-result-*.xml</sonar.cxx.xunit.reportPath>		
		<sonar.cxx.bulleyescoverage.reportPath>.sonar/reports-bullseye/bullseyecoverage-result-*.xml</sonar.cxx.bulleyescoverage.reportPath>
		<sonar.cxx.bulleyescoverage.itReportPath>.sonar/reports-it-bullseye/bullseyecoverage-result-*.xml</sonar.cxx.bulleyescoverage.itReportPath> 
		<sonar.cxx.bulleyescoverage.calcomplexity>true</sonar.cxx.bulleyescoverage.calcomplexity>			
		<sonar.host.url>http://latest-fiasco:9000</sonar.host.url>

		<cmake.command>cmake</cmake.command>
		<make.command>make</make.command>
		<cmake.generator.win32>Visual Studio 14 2015</cmake.generator.win32>
		<cmake.generator.win64>Visual Studio 14 2015 Win64</cmake.generator.win64>
		<cmake.generator.mingw>MinGW Makefiles</cmake.generator.mingw>
		<cmake.generator.unix>Unix Makefiles</cmake.generator.unix>
		<cmake.generator.Sublime>Sublime Text 2 - Unix Makefiles</cmake.generator.Sublime>
		<cmake.generator.Eclipse>Eclipse CDT4 - Unix Makefiles</cmake.generator.Eclipse>

		<cmake.generator/>
		<cmake.build.type/>
		<hostname/>
		<aol/>
		<cpp.compiler.version/>
		<nproc/>
		<os>${env.OS}</os>
		<computer>${env.COMPUTERNAME}</computer>
		<arch>${env.PROCESSOR_ARCHITECTURE}</arch>
		<sys.os.arch>${os.arch}</sys.os.arch>
		<sys.os.name>${os.name}</sys.os.name>
		<sys.os.version>${os.version}</sys.os.version>
		<sys.user.name>${user.name}</sys.user.name>
		<sys.java.vendor>${java.vendor}</sys.java.vendor>
		<sys.java.version>${java.version}</sys.java.version>
		<sys.user.timezone>${user.timezone}</sys.user.timezone>
	</properties>

	<modules>
		<!-- <module>external</module> -->
		<module>ctk</module>
		<!-- <module>utils</module> -->
		<!-- <module>osgi</module> -->
	</modules>

	<build>
		<sourceDirectory>${project.basedir}/src/main/cpp</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/cpp</testSourceDirectory>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.4.0.Final</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- WORKAROUND: https://issues.sonatype.org/browse/CENTRALSRV-35 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<mavenExecutorId>forked-path</mavenExecutorId>
						<useReleaseProfile>false</useReleaseProfile>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!-- <arguments>${arguments} -Psonatype-oss-release</arguments> -->
						<tagNameFormat>release-@{project.version}</tagNameFormat>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>${buildnumber-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>none</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<!-- <compilerArgs> -->
					<!-- <arg>-Xlint:unchecked</arg> -->
					<!-- </compilerArgs> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
				<configuration>
					<verbose>true</verbose>
					<!-- <filesets> -->
					<!-- <fileset> -->
					<!-- <directory>bin</directory> -->
					<!-- <followSymlinks>false</followSymlinks> -->
					<!-- <includes> -->
					<!-- <include>*</include> -->
					<!-- </includes> -->
					<!-- </fileset> -->
					<!-- <fileset> -->
					<!-- <directory>packages</directory> -->
					<!-- <followSymlinks>false</followSymlinks> -->
					<!-- <includes> -->
					<!-- <include>*</include> -->
					<!-- </includes> -->
					<!-- </fileset> -->
					<!-- <fileset> -->
					<!-- <directory>CMakeFiles</directory> -->
					<!-- <followSymlinks>false</followSymlinks> -->
					<!-- <includes> -->
					<!-- <include>*</include> -->
					<!-- </includes> -->
					<!-- </fileset> -->
					<!-- <fileset> -->
					<!-- <directory>./</directory> -->
					<!-- <followSymlinks>false</followSymlinks> -->
					<!-- <includes> -->
					<!-- <include>CMakeCache.txt</include> -->
					<!-- </includes> -->
					<!-- </fileset> -->
					<!-- </filesets> -->
				</configuration>
				<!--executions>
				  <execution>
					<id>auto-clean-at-build</id>
					<phase>initialize</phase>
					<goals>
					  <goal>clean</goal>
					</goals>
				  </execution>
				</executions-->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven-install-plugin.version}</version>
			</plugin>
		</plugins>
	</build>    
	<profiles> 
		<profile>
			<id>windows-x64-build</id>
			<activation>
				<os>
					<family>Windows</family>
					<!-- <arch>x64</arch> -->
				</os>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<cmake.command>cmake.exe</cmake.command>
				<cmake.build.type>Debug</cmake.build.type>
				<make.command>mingw32-make</make.command>
				<hostname>${env.COMPUTERNAME}</hostname>
				<nproc>${env.NUMBER_OF_PROCESSORS}</nproc>
				<cmake.generator>${cmake.generator.mingw}</cmake.generator>
				<aol>${sys.os.arch}-${os.detected.name}-${cmake.build.type}</aol>
				<!-- <aol>${os.detected.classifier}-${cmake.build.type}</aol> -->
			</properties>
			<build>
				<directory>${aol}</directory>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>cmake-generate-and-configure</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<executable>${cmake.command}</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-DPROJECT_CMAKE_MODULE_ROOT_PATH=${main.basedir}</argument>
										<argument>-DPROJECT_NAME=${project.artifactId}</argument>
										<argument>-Wno-dev</argument>
										<argument>-no-warn-unused-cli</argument>  <!-- Mutes  Manually-specified variables were not used by the project -->
										<argument>-G</argument>
										<argument>${cmake.generator}</argument>
										<argument>-DCMAKE_BUILD_TYPE=${cmake.build.type}</argument>
										<argument>-DCMAKE_EXPORT_COMPILE_COMMANDS=ON</argument>
										<argument>-DNAMESPACE=${namespace}</argument>
										<argument>-DMY_EXPORT_HEADER_PREFIX=${namespace}_CTK</argument>
										<argument>-DMY_LIBNAME=${namespace}_CTK</argument>
										<argument>-DMY_LIBRARY_EXPORT_DIRECTIVE=${namespace}_CTK</argument>
										<argument>${project.basedir}</argument>
										<argument>-DCMAKE_INSTALL_PREFIX=${install.basedir}</argument>
										<argument>-DTARGET_BUILD_DIRECTORY=${install.basedir}</argument>
										<argument>-DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=${install.basedir}/lib</argument>
										<argument>-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${install.basedir}/lib</argument>
										<argument>-DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${install.basedir}/bin</argument>
										<argument>-DMAJOR=1</argument>
										<argument>-DMINOR=0</argument>
										<argument>-DMICRO=0</argument>
										<argument>-DPATCH=${git.commit.id.abbrev}</argument>
										<argument>-DREV="SNAPSHOOT"</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>cmake-compiling-code</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<executable>${make.command}</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-j</argument>
										<argument>${nproc}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>windows-x64-build-groovy-style</id>
			<activation>
				<os>
					<family>Windows</family>
					<!-- <arch>x64</arch> -->
				</os>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<rsrcFolder>${project.basedir}\src\main\config</rsrcFolder>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>groovy-maven-plugin</artifactId>
						<version>${groovy-maven-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
								<version>${groovy-al.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>uncrustifying-files</id>
								<phase>none</phase>
								<!-- <phase>generate-resources</phase> -->
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>
										<![CDATA[ 
									import groovy.util.logging.Slf4j
									class Connector {
										private String mainSrcDir
										private String mainTestDir
										private String rsrc_Folder

										Connector(properties) {
											mainSrcDir = properties['styleFolderSrc']
											mainTestDir = properties['styleFolderTest']
											rsrc_Folder = properties['rsrcFolder']

										}
									}
									
									def connector = new Connector(project.properties)
									def pattern = ~/.*\.style/
									println "mainSrcDir ${connector.mainSrcDir}";
									println "mainTestDir ${connector.mainTestDir}";
									println "rsrc_Folder ${connector.rsrc_Folder}";
									
									def uncrustifycfg;
									def testcommand = "uncrustify --version"
									
									try {

										new File(connector.rsrc_Folder).eachFileMatch(pattern) { file ->  

											//assert file.exists() : "Uncrustify config file not found"
											//uncrustifycfg = file.getPath() ;//.replaceAll( "\\","/");                  ///Widows console hack
											//println " Style config : $uncrustifycfg"
										}
										
										new File(connector.mainSrcDir).eachDirRecurse() { dir ->

											dir.eachFileMatch(~/.*.cpp/) { file -> 

												def sources = file.getPath()
												
												["uncrustify", "--no-backup", "-l", "CPP", "-c","E:\\developppements\\Arkhe-develop-home\\src\\main\\config\\coding.style", sources ].execute().waitForProcessOutput(System.out, System.err);
												
												//println(["uncrustify", "--no-backup", "-l", "CPP", "-c","E:\\developppements\\Arkhe-develop-home\\src\\main\\config\\coding.style" , "E:\\developppements\\Arkhe-develop-home\\src\\main\\cpp\\arkhe\\core\\json\\Parser.cpp"].execute().text)
												//uncrustify --no-backup -l CPP -c E:\developppements\Arkhe-develop-home\src\main\config\coding.style
												//println(["uncrustify", "--no-backup", "-l", "CPP", "-c", uncrustifycfg, sources].execute().text)
												//println "Beautifying " + 'uncrustify --no-backup -l CPP -c $uncrustifycfg $sources'.execute().text;
												//println "Beautifying " + "$testcommand".execute().text + "$sources" ;
												//println "uncrustify --no-backup -l CPP -c  $uncrustifycfg $sources".execute().text;
												//println "cmd /c uncrustify --no-backup -l CPP -c  $uncrustifycfg $sources".execute(null, "${connector.mainSrcDir}").text;
												//def process = "uncrustify --no-backup -l CPP -c  uncrustifycfg $sources".execute();
												//println  process
													
											}
											
											dir.eachFileMatch(~/.*.hpp/) { file -> 
													def headers = file.getPath()
													
													["uncrustify", "--no-backup", "-l", "CPP", "-c","E:\\developppements\\Arkhe-develop-home\\src\\main\\config\\coding.style" , headers ].execute().waitForProcessOutput(System.out, System.err);
													//if(!process)
													//	log.warn 'filed to style' + file.getPath()
											}
										}
										new File(connector.mainTestDir).eachDirRecurse() { dir ->
												dir.eachFileMatch(~/.*.cpp/) { file -> 
										
													def sourcesTest = file.getPath()
													
													//def process = "uncrustify --no-backup -l CPP -c  connector.styleCFG file.getPath()".execute();
													["uncrustify", "--no-backup", "-l", "CPP", "-c","E:\\developppements\\Arkhe-develop-home\\src\\main\\config\\coding.style" , sourcesTest ].execute().waitForProcessOutput(System.out, System.err);
												}
												
												dir.eachFileMatch(~/.*.hpp/) { file -> 
													def headersTest = file.getPath()
													["uncrustify", "--no-backup", "-l", "CPP", "-c","E:\\developppements\\Arkhe-develop-home\\src\\main\\config\\coding.style" , headersTest ].execute().waitForProcessOutput(System.out, System.err);
												}
										}

									}catch(Exception ex) {
									
										log.error 'Project bld Exception Caught: ' + ex.getMessage()
									}
                                 ]]>
									</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>		
		</profile>
	</profiles>
</project>        